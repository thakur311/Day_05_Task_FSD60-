Q3. Read about difference between window, screens and documents in javascript.

WINDOW
Each browser tab has its own top-level window object. Each <iframe> (and deprecated <frame>) element has its own window object too, 
nested within a parent window. Each of these windows gets its own separate global object. window.window always refers to window, but window.
parent and window.top might refer to enclosing windows, giving access to other execution contexts. In addition to document and screen 
described below, window properties include

> setTimeout() and setInterval() binding event handlers to a timer
> location giving the current URL
> history with methods back() and forward() giving the tab's mutable history
> navigator describing the browser software

DOCUMENT

What about the document object then? The Document object(DOM) is your html, aspx, php, or other document that will be loaded into the browser. 
The document actually gets loaded inside the window object and has properties available to it like title, URL, cookie, etc. 
What does this really mean? That means if you want to access a property for the window it is window.property, if it is document it is 
window.document.property which is also available in short as document.property.

window.document or just document is the main object of the potentially visible (or better yet: rendered) document object model/DOM.

Since window is the global object you can reference any properties of it with just the property name - so you do not have to write down 
window. - it will be figured out by the runtime.

SCREEN

The window object also has a screen object with properties describing the physical display:

screen properties width and height are the full screen

screen properties availWidth and availHeight omit the toolbar

The portion of a screen displaying the rendered document is the viewport in JavaScript, which is potentially confusing because we call 
an application's portion of the screen a window when talking about interactions with the operating system. The getBoundingClientRect() method of
 any document element will return an object with top, left, bottom, and right properties describing the location of the element in the viewport.